image: python:3.12-alpine

stages:
  - linting
  - pages

.env_setup:
  before_script:
    # install curl
    - apk add curl
    # install poetry
    - curl -sSL https://install.python-poetry.org | python -
    # add poetry install path to PATH
    - export PATH="$HOME/.local/bin:${PATH}"
    # update poetry, configure, and install tox
    - poetry self update
    - poetry config virtualenvs.in-project true; poetry config cache-dir ${PYENV_DIR}/.poetry-cache;
    - poetry config --list
    - poetry install

linting:
    stage: linting
    extends: .env_setup
    rules:
      - if: $CI_COMMIT_TAG
        when: never 
      - if: $CI_COMMIT_BRANCH == "public"
        when: never
      - if: $CI_COMMIT_BRANCH == "nist-pages"
        when: never
      - when: always
    retry: 2
    script:
      - poetry run isort . --check-only
      - poetry run black --check .
      - poetry run ruff check .
    needs: []

pages:
  stage: pages
  script:
    - poetry run sphinx-build docs public/
  extends: .env_setup
  rules:
    - if: $CI_COMMIT_TAG
      when: never 
    - when: always
  artifacts:
    paths:
      - public
